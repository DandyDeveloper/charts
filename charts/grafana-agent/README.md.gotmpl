# Grafana Agent

[Grafana Agent](https://grafana.com/docs/agent/latest/) is an alternative to Prometheus specifically crafted for remote writes. Grafana Agent removes the fluff from Prometheus to provide a more compact experience with Prometheus.

## TL;DR

```bash
helm repo add dandydev https://dandydeveloper.github.io/charts
helm install dandydev/grafana-agent
```

By default, this chart will install a DaemonSet across all nodes. Those agents will scrape the metrics from the local node and its resources.

## Introduction

This chart bootstraps a [Grafana Agent](https://grafana.com/docs/agent/latest/).

## Prerequisites

* Kubernetes 1.15+
* PV provisioner support in the underlying infrastructure (if scrapingService.enabled)

## Installing the Chart

To install the chart

```bash
helm repo add dandydev https://dandydeveloper.github.io/charts
helm install dandydev/grafana-agent
```

## Uninstalling the Chart

To uninstall/delete the deployment:

```bash
helm delete <Release Name>
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

## Configuration

The following table lists the configurable parameters of the Grafana Agent chart and their default values.

| Parameter | Description | Type | Default |
|-----|------|---------|-------------|
{{- range .Values }}
| `{{ .Key }}` | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} | {{ .Type }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
{{- end }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,

```bash
$ helm repo add dandydev https://dandydeveloper.github.io/charts
$ helm install \
  --set tag=1.7.0 \
    dandydev/grafana-agent
```

The above command deploys a DaemonSet of the Grafana Agent in the `default` namespace.

# Scraping Service Mode
[Scraping Service mode](https://grafana.com/docs/agent/latest/scraping-service/)

----------------------------------------------
Autogenerated from chart metadata using [helm-docs](https://github.com/norwoodj/helm-docs)
