{{- if .Values.scrapingServiceMode.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana-agent.fullname" . }}
  labels:
    {{- include "grafana-agent.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 10
  selector:
    matchLabels:
      {{- include "grafana-agent.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ default "Recreate" .Values.updateStrategy }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "grafana-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "grafana-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - -config.file=/etc/agent/agent.yml
            - -prometheus.wal-directory=/tmp/agent/data
          command:
            - /bin/agent
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/agent
            - name: wal-dir
              mountPath: {{ .Values.config.prometheus.walDir }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - configMap:
            name: {{ default (printf "%s" (include "grafana-agent.fullname" .)) .Values.config.existingConfigMap }}
          name: config
        - name: wal-dir
          emptyDir: {}
{{- end }}
